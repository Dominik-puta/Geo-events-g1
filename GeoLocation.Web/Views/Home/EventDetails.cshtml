@using GeoLocation.Model;
@using Humanizer;
@model EventDetailsViewModel

@{
    var base64 = Convert.ToBase64String(Model.Image.ImageFile);
    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
}
<div>
    <div class="imageContainer" style="background-image: url(@imgSrc);">
        <div class="category">@Model.EventCategory.Name—@Model.EventSubCategory.Name</div>
        <div class="title">@Model.Event.Name</div>
        <div class="description">@Model.Event.Description</div>
        <div class="imageOverlay"></div>
    </div>

    <div class="timebox">
        <div class="start">
            <div class="timeInscription">Počinje</div>
            <div class="date">@Model.Event.StartDate.ToString("dd/MM/yyyy")</div>
            <div class="time">@Model.Event.StartDate.ToString("HH:mm") sati</div>
        </div>
        <div class="end">
            <div class="timeInscription">Završava</div>
            <div class="date">@Model.Event.EndDate.ToString("dd/MM/yyyy")</div>
            <div class="time">@Model.Event.EndDate.ToString("HH:mm") sati</div>
        </div>
        <div class="vl"></div>
    </div>

    <div class="rsvpContainer">
        <div class="section-title">Potvrdite dolazak</div>
        <div class="section-box">
            @await Html.PartialAsync("RsvpPartial", Model.Rsvp)
        </div>
    </div>

    <div class="venueContainer">
        <div class="section-title">Lokacija</div>
        <div class="section-box venue-box">
            <div id="map"></div>
            <div class="venue-info-container">
                <div class="row">
                <div class="venue-info col-md-6" style="margin-left: 10px;"><img src="~/images/location_on - material.png" /> @Model.Venue.Name</div>
                <div class="venue-info col-md-6" style="float: right"><img src="~/images/phone_android - material.png" /> @Model.Venue.Phone</div>
                </div>
                <div class="row">
                    <div class="venue-info col-md-6" style="margin-left: 10px"><img src="~/images/home - material.png" /> @Model.Venue.Address</div>
                    <div class="venue-info col-md-6" style="float: right"><img src="~/images/email - material.png" /> <a href="mailto:@Model.Venue.Email">@Model.Venue.Email</a></div>
                </div> 
           </div>
        </div>
    </div>

    <div class="banner">
        <div class="banner-info-container">
            <div class="banner-info" style="float: left">
                <img src="~/images/attach_money - material.png" class="banner-icon" />
                <div class="banner-label">Cijena</div>
                <div class="banner-data">@Model.Event.EntryFee kn</div>
            </div>
            <div class="banner-info" style="float: right">
                <img src="~/images/people - material.png" class="banner-icon" />
                <div class="banner-label">Broj mjesta</div>
                <div class="banner-data">
                    @if (Model.Event.LimitedSpace == 0)
                    {
                        <div style="font-size: 40px">Neograničeno</div>
                    }
                    else
                    {
                        <div>@Model.Event.LimitedSpace.ToString("N0")</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="rating-container">
        <div class="section-title">Ocijenite ovaj događaj</div>
        <div>
            @{
                int i;
                for (i = 1; i <= 5; i++)
                {
                    <div class="star-border" id="@i" onmouseover="rateOver(this.id)" onmouseout="rateOut(this.id)" onclick="rateClick(this.id)">
                    </div>
                }
            }
        </div>
        @if (Model.RatingAverage != 0)
        {
            <div class="section-title" style="font-size: 16px">
                Prosječna ocjena: @Model.RatingAverage.ToString("N2")
            </div>
        }
        else
        {
            <div class="section-title" style="font-size: 14px">
                Još nema ocjena!
            </div>
        }
    </div>

    <div class="comment-container">
        <div class="section-title">Komentari</div>
        @if (Model.Comments.Count() == 0)
        {
            <div class="message">
                Trenutno nema komentara. Budite prvi!
            </div>
            <div class="hl"></div>
        }
        <div class="section-box comment-section-box" style="height: 507px">
            @await Html.PartialAsync("AddCommentPartial", Model.NewComment)
        </div>
        @foreach (var comment in Model.Comments)
        {
            <div class="section-box comment">
                <div class="comment-name">@comment.FirstName @comment.LastName</div>
                <div class="comment-timestamp">@comment.DateCreated.Humanize()</div>
                <div class="comment-text">@comment.Text</div>
            </div>
        }
    </div>
</div>

<script type="text/javascript" src="https://js.api.here.com/v3/3.0/mapsjs-core.js"></script>
<script type="text/javascript" src="https://js.api.here.com/v3/3.0/mapsjs-service.js"></script>
<script type="text/javascript" src="https://js.api.here.com/v3/3.0/mapsjs-ui.js"></script>
<script type="text/javascript" src="https://js.api.here.com/v3/3.0/mapsjs-mapevents.js"></script>
<script>
    var platform = new H.service.Platform({
        app_id: 'djjwJitUsSXrdRYlUse2',
        app_code: '00VX2XyikFomgHBCZwDrRw',
        useHTTPS: true
    });
    var pixelRatio = window.devicePixelRatio || 1;
    var defaultLayers = platform.createDefaultLayers({
        tileSize: pixelRatio === 1 ? 256 : 512,
        ppi: pixelRatio === 1 ? undefined : 320
    });
    var map = new H.Map(document.getElementById('map'),
        defaultLayers.normal.map, {
            center: { lat: Number(@Model.Event.Lat), lng: Number(@Model.Event.Long) },
            zoom: 13,
            pixelRatio: pixelRatio
        });
    var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
    var ui = H.ui.UI.createDefault(map, defaultLayers);

    var marker = new H.map.Marker({ lat: Number(@Model.Event.Lat), lng: Number(@Model.Event.Long) });
    map.addObject(marker);
</script>
<script>
    function rateOver(id) {
        for (var i = 1; i <= Number(id); i++) {
            $("#" + i).attr('class', 'star-full');
        }
    }

    function rateOut(id) {
        for (var i = Number(id); i <= 5; i++) {
            $("#" + i).attr('class', 'star-border');
        }
    }

    function rateClick(id) {
        $.ajax({
            url: "/Home/Rate?value=" + id + "&eventId=" + "@Model.Event.Id",
            success: function () {
                for (var i = 1; i <= 5; i++) {
                    $("#" + i).attr('onmouseover', '');
                    $("#" + i).attr('onmouseout', '');
                    $("#" + i).attr('onclick', '');
                }
            }
        });
    }
</script>
@*Url.Action("Rate", "Home", new { value = i, eventId = Model.Event.Id })*@